{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\asq-gui-js\\\\src\\\\components\\\\questionDetails.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useApi } from \"../api\";\nimport './questions.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuestionDetails() {\n  _s();\n  let params = useParams();\n  const api = useApi();\n  let questionid = params.questionid;\n  const [content, setContent] = useState('');\n  const [counter, setCounter] = useState(0);\n  const [question, setQuestion] = useState(undefined);\n  const [answers, setAnswers] = useState(undefined);\n  const [validationError, setValidationError] = useState('');\n  let username = api.username;\n  useEffect(() => {\n    api.getOneQuestion(questionid).then(setQuestion);\n    api.getAnswers(questionid).then(setAnswers);\n  }, [counter]);\n  async function submitHandler(event) {\n    event.preventDefault();\n    if (content.length >= 1 && content.length <= 1000) {\n      await api.postAnswer(username, content, questionid);\n      setContent('');\n      setCounter(counter + 1);\n    } else {\n      setValidationError('Your content should be between 1 and 1000 characters');\n    }\n  }\n  if (question == undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  } else {\n    let likedUser = question.likedByUser;\n    let likedContent;\n    if (likedUser) {\n      likedContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2665\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 26\n      }, this);\n    } else {\n      likedContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2661\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 26\n      }, this);\n    }\n    async function toggleLike(event) {\n      if (likedUser) {\n        await api.deleteLike(question.id);\n      } else {\n        await api.postLike(question.id);\n      }\n      setCounter(counter + 1);\n    }\n    let answersObj = [];\n    if (answers != undefined) {\n      for (let i = 0; i < answers.length; i++) {\n        let likedUserA = answers[i].likedByUser;\n        let likedContentA;\n        async function toggleLikeA(event) {\n          if (likedUserA) {\n            await api.deleteLike(answers[i].id);\n          } else {\n            await api.postLike(answers[i].id);\n          }\n          setCounter(counter + 1);\n        }\n        if (likedUserA) {\n          likedContentA = /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2665\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this);\n        } else {\n          likedContentA = /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2661\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this);\n        }\n        answersObj.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answerContainer\",\n          children: [likedContentA, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleLikeA,\n            children: likedUserA ? 'Dislike' : 'Like'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answers[i].likeCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 88\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [answers[i].author, \" responded:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answers[i].contents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this));\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionContainer\",\n        children: [likedContent, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleLike,\n          children: likedUser ? 'Dislike' : 'Like'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.contents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.likeCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: validationError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), answersObj]\n    }, void 0, true);\n  }\n}\n_s(QuestionDetails, \"lFt0vanDaTi4UeF8xI5xI85ueKY=\", false, function () {\n  return [useParams, useApi];\n});\n_c = QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["useEffect","useState","useParams","useApi","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionDetails","_s","params","api","questionid","content","setContent","counter","setCounter","question","setQuestion","undefined","answers","setAnswers","validationError","setValidationError","username","getOneQuestion","then","getAnswers","submitHandler","event","preventDefault","length","postAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","likedUser","likedByUser","likedContent","toggleLike","deleteLike","id","postLike","answersObj","i","likedUserA","likedContentA","toggleLikeA","push","className","onClick","likeCount","author","contents","summary","onSubmit","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/David/Documents/asq-gui-js/src/components/questionDetails.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useApi } from \"../api\";\r\nimport './questions.css'\r\nexport default function QuestionDetails(){\r\n    let params = useParams();\r\n    const api= useApi();\r\n    let questionid = params.questionid;\r\n    const [content, setContent] = useState('');\r\n    const [counter, setCounter] = useState(0);\r\n    const [question, setQuestion] = useState(undefined);\r\n    const [answers, setAnswers] = useState(undefined)\r\n    const [validationError, setValidationError] = useState('')\r\n    let username = api.username;\r\n    useEffect(()=>{\r\n        api.getOneQuestion(questionid).then(setQuestion);\r\n        api.getAnswers(questionid).then(setAnswers);\r\n    },[counter]);\r\n\r\n    async function submitHandler(event){\r\n        event.preventDefault();\r\n        if(content.length >= 1 && content.length <= 1000){\r\n        await api.postAnswer(username, content, questionid);\r\n        setContent('');\r\n        setCounter(counter+1);\r\n        }else{\r\n          setValidationError('Your content should be between 1 and 1000 characters');\r\n        }\r\n      }\r\n  \r\n    if(question == undefined){\r\n        return <div>Loading question...</div>\r\n      }else{\r\n        let likedUser = question.likedByUser;\r\n        let likedContent;\r\n  \r\n        if(likedUser){\r\n          likedContent = <p>&hearts;</p>\r\n        }else{\r\n          likedContent = <p>â™¡</p>\r\n        }\r\n        async function toggleLike(event){\r\n          if(likedUser){\r\n          await api.deleteLike(question.id);\r\n          }else{\r\n            await api.postLike(question.id);\r\n          }\r\n          setCounter(counter+1);\r\n        }\r\n        let answersObj =[];\r\n        if(answers != undefined){\r\n            \r\n        \r\n        for(let i = 0; i < answers.length; i++){\r\n            let likedUserA = answers[i].likedByUser;\r\n            let likedContentA;\r\n      \r\n            async function toggleLikeA(event){\r\n                if(likedUserA){\r\n                await api.deleteLike(answers[i].id);\r\n                }else{\r\n                  await api.postLike(answers[i].id);\r\n                }\r\n                setCounter(counter+1);\r\n              }\r\n     \r\n              if(likedUserA){\r\n                likedContentA = <p>&hearts;</p>\r\n              }else{\r\n                likedContentA = <p>â™¡</p>\r\n              }\r\n            answersObj.push(<div className=\"answerContainer\">\r\n                {likedContentA}\r\n                <button onClick={toggleLikeA}>{likedUserA? 'Dislike' : 'Like'}</button><p>{answers[i].likeCount}</p>\r\n                <p>{answers[i].author} responded:</p>\r\n                <p>{answers[i].contents}</p>\r\n            </div>)\r\n        }\r\n    }\r\n    return(\r\n    <>\r\n        <div className=\"questionContainer\">\r\n          {likedContent}\r\n          <button onClick={toggleLike}>{likedUser? 'Dislike' : 'Like'}</button>\r\n         \r\n        <p>{question.author}</p>\r\n        <p>{question.summary}</p>\r\n        <p>{question.contents}</p>\r\n        <p>{question.likeCount}</p>\r\n\r\n        <form onSubmit={submitHandler}>\r\n        <input type=\"text\" value={content} onChange={(e)=>setContent(e.target.value)}>\r\n        </input>\r\n        <button type=\"submit\">\r\n          Send\r\n        </button>\r\n        <p className=\"error\">{validationError}</p>\r\n      </form>\r\n    </div>\r\n    \r\n{answersObj}\r\n</>)\r\n      }\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}