{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\asq-gui-js\\\\src\\\\components\\\\questionDetails.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useApi } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionDetails() {\n  _s();\n  let params = useParams();\n  const api = useApi();\n  let questionid = params.questionid;\n  const [content, setContent] = useState('');\n  const [counter, setCounter] = useState(0);\n  const [question, setQuestion] = useState(undefined);\n  const [answers, setAnswers] = useState(undefined);\n  let username = api.username;\n  useEffect(() => {\n    api.getOneQuestion(questionid).then(setQuestion);\n    api.getAnswers(questionid).then(setAnswers);\n  }, [counter]);\n  async function submitHandler(event) {\n    event.preventDefault();\n    await api.postAnswer(username, content, questionid);\n    setContent('');\n    setCounter(counter + 1);\n  }\n  if (question == undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  } else {\n    let likedUser = question.likedByUser;\n    let likedContent;\n    if (likedUser) {\n      likedContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"user likes it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 26\n      }, this);\n    } else {\n      likedContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"user does not like it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 26\n      }, this);\n    }\n    async function toggleLike(event) {\n      if (likedUser) {\n        await api.deleteLike(question.id);\n      } else {\n        await api.postLike(question.id);\n      }\n      setCounter(counter + 1);\n    }\n    if (answers != undefined) {\n      let answersObj = [];\n      for (let i = 0; i < answers.length; i++) {\n        async function toggleLikeA(event) {\n          if (likedUser) {\n            await api.deleteLike(answers[i].id);\n          } else {\n            await api.postLike(answers[i].id);\n          }\n          setCounter(counter + 1);\n        }\n        let likedUserA = question.likedByUser;\n        let likedContentA;\n        if (likedUserA) {\n          likedContentA = /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"user likes it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 27\n          }, this);\n        } else {\n          likedContentA = /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"user does not like it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 27\n          }, this);\n        }\n        answersObj.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [likedContentA, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleLike(answers[i].id),\n            children: likedUserA ? 'Dislike' : 'Like'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [answers[i].author, \" responded:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answers[i].contents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this));\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [likedContent, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleLike,\n        children: likedUser ? 'Dislike' : 'Like'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.likeCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(QuestionDetails, \"0SzGcZVU8E2+eOmxlFRhtn8sAyU=\", false, function () {\n  return [useParams, useApi];\n});\n_c = QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["useEffect","useState","useParams","useApi","jsxDEV","_jsxDEV","QuestionDetails","_s","params","api","questionid","content","setContent","counter","setCounter","question","setQuestion","undefined","answers","setAnswers","username","getOneQuestion","then","getAnswers","submitHandler","event","preventDefault","postAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","likedUser","likedByUser","likedContent","toggleLike","deleteLike","id","postLike","answersObj","i","length","toggleLikeA","likedUserA","likedContentA","push","onClick","author","contents","summary","likeCount","onSubmit","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/David/Documents/asq-gui-js/src/components/questionDetails.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useApi } from \"../api\";\r\n\r\nexport default function QuestionDetails(){\r\n    let params = useParams();\r\n    const api= useApi();\r\n    let questionid = params.questionid;\r\n    const [content, setContent] = useState('');\r\n    const [counter, setCounter] = useState(0);\r\n    const [question, setQuestion] = useState(undefined);\r\n    const [answers, setAnswers] = useState(undefined)\r\n    let username = api.username;\r\n    useEffect(()=>{\r\n        api.getOneQuestion(questionid).then(setQuestion);\r\n        api.getAnswers(questionid).then(setAnswers);\r\n    },[counter]);\r\n\r\n    async function submitHandler(event){\r\n        event.preventDefault();\r\n        await api.postAnswer(username, content, questionid);\r\n        setContent('');\r\n        setCounter(counter+1);\r\n      }\r\n  \r\n    if(question == undefined){\r\n        return <div>Loading question...</div>\r\n      }else{\r\n        let likedUser = question.likedByUser;\r\n        let likedContent;\r\n  \r\n        if(likedUser){\r\n          likedContent = <p>user likes it</p>\r\n        }else{\r\n          likedContent = <p>user does not like it</p>\r\n        }\r\n        async function toggleLike(event){\r\n          if(likedUser){\r\n          await api.deleteLike(question.id);\r\n          }else{\r\n            await api.postLike(question.id);\r\n          }\r\n          setCounter(counter+1);\r\n        }\r\n        if(answers != undefined){\r\n            \r\n        let answersObj =[];\r\n        for(let i = 0; i < answers.length; i++){\r\n            async function toggleLikeA(event){\r\n                if(likedUser){\r\n                await api.deleteLike(answers[i].id);\r\n                }else{\r\n                  await api.postLike(answers[i].id);\r\n                }\r\n                setCounter(counter+1);\r\n              }\r\n            let likedUserA = question.likedByUser;\r\n        let likedContentA;\r\n  \r\n        if(likedUserA){\r\n          likedContentA = <p>user likes it</p>\r\n        }else{\r\n          likedContentA = <p>user does not like it</p>\r\n        }\r\n            answersObj.push(<div>\r\n                {likedContentA}\r\n                <button onClick={toggleLike(answers[i].id)}>{likedUserA? 'Dislike' : 'Like'}</button>\r\n                <p>{answers[i].author} responded:</p>\r\n                <p>{answers[i].contents}</p>\r\n            </div>)\r\n        }\r\n    }\r\n    return(<div>\r\n          {likedContent}\r\n          <button onClick={toggleLike}>{likedUser? 'Dislike' : 'Like'}</button>\r\n         \r\n        <p>{question.author}</p>\r\n        <p>{question.summary}</p>\r\n        <p>{question.contents}</p>\r\n        <p>{question.likeCount}</p>\r\n\r\n        <form onSubmit={submitHandler}>\r\n        <input type=\"text\" value={content} onChange={(e)=>setContent(e.target.value)}>\r\n        </input>\r\n\r\n        <button type=\"submit\">\r\n          Send\r\n        </button>\r\n\r\n      </form>\r\n    </div>)\r\n      }\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}